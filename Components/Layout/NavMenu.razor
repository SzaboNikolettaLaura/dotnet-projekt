@inject NavigationManager NavigationManager
@inject LoginService LoginService
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">OrszagosAtlagok</a>
        <button title="Navigációs menü" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Főoldal
            </NavLink>
        </div>
        @if (loggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="profile">
                    <span class="oi oi-person" aria-hidden="true"></span> Profil
                </NavLink>
            </div>
        }
        @if (!loggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Bejelentkezés/Regisztráció
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="search">
                <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Keresés
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="grades">
                <span class="oi oi-book" aria-hidden="true"></span> Jegyek
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private bool loggedIn = false;

    protected override void OnInitialized()
    {
        loggedIn = LoginService.IsLoggedIn();
        LoginService.OnLoginStateChange += HandleLoginStateChange;
    }

    private void HandleLoginStateChange(bool state)
    {
        loggedIn = state;
        InvokeAsync(StateHasChanged);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Dispose()
    {
        LoginService.OnLoginStateChange -= HandleLoginStateChange;
    }
}

